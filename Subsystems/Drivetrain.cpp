// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.




#include "Drivetrain.h"
#include "../Robotmap.h"
#include "../Commands/StickDrive.h"

Drivetrain::Drivetrain() : Subsystem("Drivetrain") {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	gear = RobotMap::drivetrainGear;
	left = RobotMap::drivetrainLeft;
	right = RobotMap::drivetrainRight;
	chassis = RobotMap::drivetrainchassis;
	gyro = RobotMap::drivetrainGyro;
	leftEncoder = RobotMap::drivetrainLeftEncoder;
	rightEncoder = RobotMap::drivetrainRightEncoder;
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
}
    
void Drivetrain::InitDefaultCommand() {
	// Set the default command for a subsystem here.
	//SetDefaultCommand(new MySpecialCommand());
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	SetDefaultCommand(new StickDrive());
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}

void Drivetrain::DriveWithStick(Joystick* joy) {
	chassis->ArcadeDrive(-1 * joy->GetRawAxis(2), joy->GetRawAxis(4));
}

void Drivetrain::Shift(bool dir) {
	gear->Set(dir);
}

void Drivetrain::Stop() {
	chassis->StopMotor();
}

// Put methods for controlling this subsystem
// here. Call these from Commands.

